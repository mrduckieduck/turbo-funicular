micronaut:
  application:
    name: turboFunicular
---
micronaut:
  security:
    redirect:
      login-success: /home
      login-failure: /getting-started
      logout: /
      prior-to-login: true
      unauthorized:
        url: /getting-started
    authentication: cookie
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"'
    oauth2:
      clients:
        github:
          client-id: '${OAUTH_CLIENT_ID}'
          client-secret: '${OAUTH_CLIENT_SECRET}'
          scopes:
            - user:email
            - read:user
            - gist
          authorization:
            url: 'https://github.com/login/oauth/authorize'
          token:
            url: 'https://github.com/login/oauth/access_token'
            auth-method: client-secret-post
    endpoints:
      logout:
        get-allowed: true
    intercept-url-map:
      - pattern: /favicon.ico
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /css/*
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /js/*
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /img/*
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /oauth/*
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /oauth/*
        http-method: POST
        access:
          - isAnonymous()
---
micronaut.router.static-resources.static.paths:
  - classpath:/static

datasources:
  default:
    url: jdbc:postgresql://localhost:5433/funicular
    driverClassName: org.postgresql.Driver
    username: user
    password: secret
    dialect: POSTGRES

flyway:
  datasources:
    default:
      enabled: true