plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "io.micronaut.application" version '1.1.0'
    id "idea"
    id "com.github.ben-manes.versions" version "0.36.0"
    id 'jacoco'
}

version "0.0.1"
group "turbo.funicular"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime "netty"
    testRuntime "spock2"
    processing {
        incremental true
        annotations "org.*"
        annotations "com.*"
    }
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor:${ micronautDataVersion }")
    annotationProcessor("org.projectlombok:lombok:${ lombokVersion }")
    annotationProcessor "org.mapstruct:mapstruct-processor:${ mapstructVersion }"
    compileOnly("org.graalvm.nativeimage:svm")
    compileOnly("org.projectlombok:lombok:${ lombokVersion }")
    compileOnly("jakarta.persistence:jakarta.persistence-api:2.2.2")

    implementation("org.mapstruct:mapstruct:${ mapstructVersion }")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.flyway:micronaut-flyway:${ micronautFlywayVersion }")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari:${ micronautJdbcHikari }")
    implementation("io.micronaut.data:micronaut-data-jdbc:${ micronautDataVersion }")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")

    testImplementation "org.codehaus.groovy:groovy:${ groovyVersion }", {
        version { strictly "${ groovyVersion }" }
    }
    testImplementation "org.spockframework:spock-core:${ spockVersion }", {
        version { strictly "${ spockVersion }" }
    }
    testImplementation "io.micronaut.test:micronaut-test-spock:${ micronautTestSpock }", {
        version { strictly "${ micronautTestSpock }" }
    }

    // If using Spock, need to depend on geb-spock
    testImplementation "org.gebish:geb-spock:${ gebVersion }"
    // Need a driver implementation
    //testCompile "org.seleniumhq.selenium:selenium-firefox-driver:${ seleniumVersion }"
    testCompile "org.seleniumhq.selenium:htmlunit-driver:${ seleniumHtmlUnitDriverVersion }"
    testRuntime "org.seleniumhq.selenium:selenium-support:${ seleniumVersion }"

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")

}

mainClassName = "turbo.funicular.Application"

java {
    sourceCompatibility = JavaVersion.toVersion(javaVersion)
    targetCompatibility = JavaVersion.toVersion(javaVersion)
}

test {
    systemProperties "geb.build.reportsDir": "$reportsDir/geb"
}

dockerBuild {
    images = ["docker.pkg.github.com/mrduckieduck/turbo-funicular/webapp:$project.version".toLowerCase()]
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
