version: 2.1
orbs:
  codecov: codecov/codecov@1.1.1
workflows:
  build:
    jobs:
      - build:
          context: turbo-funicular
jobs:
  build:
    #paralellism: 2
    docker:
      - image: azul/zulu-openjdk-debian:14.0.2
      - image: postgres:13.1-alpine
        environment:
          POSTGRES_USER: user
          POSTGRES_DB: funicular
          POSTGRES_PASSWORD: secret
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      GRADLE_OPTS: "-Dorg.gradle.workers.max=2"
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          environment:
            DATASOURCES_DEFAULT_URL: jdbc:postgresql://localhost:5432/funicular
          command: gradle test jacocoTestReport
      - run:
          name: Generate OCI image
          command: gradle dockerBuild
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_test_results:
          path: build/test-results/test
      - codecov/upload:
          file: build/reports/jacoco/test/jacocoTestReport.xml